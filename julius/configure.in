dnl Copyright (c) 1991-2006 Kawahara Lab., Kyoto University
dnl Copyright (c) 1997-2000 Information-technology Promotion Agency, Japan
dnl Copyright (c) 2000-2005 Shikano Lab., Nara Institute of Science and Technology
dnl Copyright (c) 2005-2006 Julius project team, Nagoya Institute of Technology
dnl All rights reserved
dnl
dnl $Id: configure.in,v 1.1 2007/09/28 02:50:55 sumomo Exp $
dnl

AC_INIT(julius.man)
AC_CONFIG_HEADER(config.h)
AC_CONFIG_AUX_DIR(../support)

dnl Checks for options

dnl select character set conversion method or disable
AC_ARG_ENABLE(charconv,
[  --enable-charconv={auto|iconv|libjcode|win|no} specify character conversion],
use_charconv=$enableval
,use_charconv=auto)

# visualization (use GTK)
AC_ARG_ENABLE(visualize,
[  --enable-visualize         enable search space visualization on X11 and GTK],
if test "$enableval" = yes; then
	want_gtk=yes
fi
,want_gtk=no)

dnl Checks for system.
AC_CANONICAL_HOST

dnl Checks for optimization flag
AC_MSG_CHECKING([host-specific optimization flag])
if test -z "$CFLAGS" ; then
    OPTFLAG=../support/cflags.${host_cpu}-${host_vendor}-${host_os}
    if test -f "$OPTFLAG" ; then
	. $OPTFLAG
	AC_MSG_RESULT([$OPTFLAG])
    else
	AC_MSG_RESULT([no])
    fi
else
    AC_MSG_RESULT([skipped])
fi

dnl Checks for compiler.
AC_PROG_CC
AC_PROG_CPP

dnl Checks for programs.
AC_PROG_INSTALL
AC_PATH_PROG(RM, rm)

dnl Checks for libraries.
dnl add '-lLIBRARY' to LIBS and define 'HAVE_LIBLIBRARY'
dnl AC_CHECK_LIB(m, log10)

dnl Check for HTK and define GTK_CFLAGS and GTK_LIBS
if test "$want_gtk" = yes; then
   AC_DEFINE(VISUALIZE)
   AM_PATH_GTK(,,AC_MSG_ERROR([gtk not found for visualization]))
   AC_MSG_CHECKING(for playing capability)
   case "$host_os" in
   linux*)
	AC_MSG_RESULT([yes])
	AC_DEFINE(PLAYCOMMAND, ["sox -r %d -c 1 -s -w -t .raw -x %s -t ossdsp /dev/dsp"])
	;;
   solaris2*)
	AC_MSG_RESULT([yes])
	AC_DEFINE(PLAYCOMMAND, ["sox -r %d -c 1 -s -w -t .raw %s -t sunau /dev/audio"])
	;;
   *)
	AC_MSG_RESULT([no])
   esac
fi

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
dnl AC_TYPE_SIZE_T

dnl Checks for library functions.
dnl AC_PROG_GCC_TRADITIONAL
dnl AC_CHECK_FUNCS(strdup strstr)
dnl AC_CHECK_FUNC(gethostbyname,,AC_CHECK_LIB(nsl,gethostbyname))
dnl AC_CHECK_FUNC(connect,,AC_CHECK_LIB(socket, connect))

dnl check for charset conversion library
if test "$use_charconv" = no; then
    CCOBJ=""
else
    AC_MSG_CHECKING([for charset conversion])
    CCOBJ="charconv.o"
    case "$host_os" in
    mingw*)
	dnl libjcode (EUC|JIS->SJIS) + Win32 API (SJIS->UTF8)
	AC_DEFINE(USE_WIN32_MULTIBYTE)
        CCOBJ="${CCOBJ} charconv_win32.o"
	CCOBJ="${CCOBJ} charconv_libjcode.o libjcode/libjcode.o libjcode/detect.o"
	ccdesc="Win32 API + libjcode"
	AC_DEFINE(CHARACTER_CONVERSION)
	AC_MSG_RESULT([win32])
	;;
*)
	case "$use_charconv" in
	auto)
            dnl iconv -> libjcode
            AM_ICONV
            if test "$am_cv_func_iconv" = yes; then
	       CCOBJ="${CCOBJ} charconv_iconv.o"
               ccdesc="iconv library"
	       AC_MSG_RESULT([iconv])
            else
               AC_DEFINE(USE_LIBJCODE)
	       CCOBJ="${CCOBJ} charconv_libjcode.o libjcode/libjcode.o libjcode/detect.o"
               ccdesc="built-in libjcode (Japanese codes only)"
	       AC_MSG_RESULT([libjcode])
            fi
            AC_DEFINE(CHARACTER_CONVERSION)
            ;;
        iconv)
            dnl force iconv
            AM_ICONV
            if test "$am_cv_func_iconv" = yes; then
	       CCOBJ="${CCOBJ} charconv_iconv.o"
               EXTRALIB="$EXTRALIB $LIBICONV"
               AC_DEFINE(CHARACTER_CONVERSION)
               ccdesc="iconv libraru"
	       AC_MSG_RESULT([iconv])
            else
	       CCOBJ=""
               ccdesc="no"
               AC_MSG_ERROR([iconv function not found!])
	       AC_MSG_RESULT([no])
            fi
            ;;
        libjcode)
            dnl force libjcode
            AC_DEFINE(USE_LIBJCODE)
	    CCOBJ="${CCOBJ} charconv_libjcode.o libjcode/libjcode.o libjcode/detect.o"
            ccdesc="built-in libjcode (Japanese codes only)"
            AC_DEFINE(CHARACTER_CONVERSION)
	    AC_MSG_RESULT([libjcode])
            ;;
        no)
            dnl disable
            ccdesc="no"
	    AC_MSG_RESULT([no])
            ;;
        *)
            dnl error
            AC_MSG_ERROR([wrong argument for charconv!])
        esac
    esac
fi

AC_SUBST(CCOBJ)

dnl write names
AC_OUTPUT(Makefile)
