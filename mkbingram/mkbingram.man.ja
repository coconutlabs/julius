.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH MKBINGRAM 1 LOCAL
.UC 6
.SH NAME
mkbingram - make binary N-gram from arpa N-gram file
.SH SYNOPSIS
.B mkbingram -nlr forward_ngram.arpa -nrl backward_ngram.arpa bingram
.SH DESCRIPTION
.I mkbingram
は，ARPA形式の前向き/後向き N-gram をバイナリ形式のファイルに結合・変
換するツールです．これを使用することで，Juliusの起動を大幅に高速化する
ことができます．
.PP
Rev.4.0 からは4-gram以上のN-gramも扱えるようになりました．上限値は 10
です．
.PP
前向きN-gramが "-nlr" で指定され，後向きN-gramが指定されない場合，
mkbingramは前向きN-gramだけからバイナリN-gramを生成します．この
バイナリN-gramを使うとき，Julius はその中の 2-gram を使って第1パスを
行い，第2パスではその前向き確率から後向きの確率を，ベイズ則に従って
算出しながら認識を行います．
.PP
後向きN-gramが "-nrl" で指定され，前向きN-gramが指定されない場合，
mkbingramは後ろ向きN-gramだけからバイナリN-gramを生成します．このバイ
ナリN-gramを使うとき，Julius はその中の後向き 2-gram からベイズ則に従っ
て算出しながら第1パスの認識を行い，第2パスでは後向き N-gramを使った
認識を行います．
.PP
両方が指定されたときは，前向きN-gram中の2-gramと後向きN-gramが統合され
たバイナリN-gramが生成されます．Juliusではその前向き2-gramで第1パスを
行い，後向きN-gramで第2パスを行います．なお両 N-gram は同一のコーパス
から同一の条件（カットオフ値，バックオフ計算方法等）で学習されてあり，
同一の語彙を持っている必要があります．
.PP
.I mkbingram
は gzip 圧縮された ARPA ファイルをそのまま読み込めます．
.PP
4.0以降のJuliusに付属のmkbingramを使って変換したバイナリN-gramファイルは，
3.xでは読み込めませんのでご注意ください．
.SH OPTIONS
.Ip "-nlr forward_ngram.arpa"
ARPA標準形式の前向き単語 N-gram ファイル．
.Ip "-nrl backward_ngram.arpa"
ARPA標準形式の逆向き単語 N-gram ファイル．
.Ip "-d バイナリN-gram"
入力とするバイナリN-gramファイル（古いバイナリN-gramの再変換用）
.Ip "bingram"
出力ファイル（Julius用バイナリ形式）
.SH EXAMPLE
ARPA形式のN-gramをバイナリ形式に変換する：
.PP
    % mkbingram -nlr ARPA_2gram -nrl ARPA_rev_3gram outfile
.PP
古いバイナリN-gramファイルを3.5以降の形式に変換する：
.PP
    % mkbingram -d old_bingram new_bingram

.SH USAGE
Julius で言語モデル指定時に，元の ARPA 形式ファイルを "-nlr 2gramfile
-nrl rev3gramfile" とする代わりに mkbingram で変換したバイナリ形式ファ
イルを "-d bingramfile" と指定します．
.SH "SEE ALSO"
julius(1)
.SH BUGS
バグ報告・問い合わせ・コメントなどは 
julius-info at lists.sourceforge.jp までお願いします．
.SH COPYRIGHT
Copyright (c) 1991-2007 京都大学 河原研究室
.br
Copyright (c) 2000-2005 奈良先端科学技術大学院大学 鹿野研究室
.br
Copyright (c) 2005-2007 名古屋工業大学 Julius開発チーム
.SH AUTHORS
李 晃伸 (名古屋工業大学) が実装しました．
.SH LICENSE
.I Julius
の使用許諾に準じます．
